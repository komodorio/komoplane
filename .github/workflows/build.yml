name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    needs: static
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Node part
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: pkg/frontend/package-lock.json
      - name: NPM install
        run: npm i
        working-directory: ./pkg/frontend
      - name: NPM build
        run: npm run build
        working-directory: ./pkg/frontend

      # Golang part
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
      - name: Unit tests
        run: |
          go test -v -race ./... -covermode=atomic -coverprofile=coverage.out # Run all the tests with the race detector enabled
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
      - name: Dry Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --snapshot --rm-dist
      - name: Test Binary is Runnable
        run: "dist/komoplane_linux_amd64_v1/komoplane --help"

  image:
    runs-on: ubuntu-latest
    needs: static
    timeout-minutes: 60
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          outputs: local
          build-args: VER=0.0.0-dev

  static:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Helm Template Check For Sanity
        uses: igabaydulin/helm-check-action@0.2.0
        env:
          CHART_LOCATION: ./charts/komoplane
          CHART_VALUES: ./charts/komoplane/values.yaml

      - name: make dir for frontend results
        run: mkdir pkg/frontend/dist && touch pkg/frontend/dist/.gitkeep
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # skip-pkg-cache: true
          version: latest
          args: --timeout=3m
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
      - name: Static analysis
        run: |
          go vet ./... # go vet is the official Go static analyzer
      - name: Cyclomatic complexity
        run: |
          go install github.com/fzipp/gocyclo/cmd/gocyclo@latest
          /home/runner/go/bin/gocyclo -over 19 main.go pkg # forbid code with huge/complex functions

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          cache: 'npm'
          cache-dependency-path: pkg/frontend/package-lock.json
      - name: NPM install
        run: npm i
        working-directory: ./pkg/frontend
      - name: NPM lint
        run: npm run lint
        working-directory: ./pkg/frontend

